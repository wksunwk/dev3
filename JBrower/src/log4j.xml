<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">  
 <!-- ========================== 自定义输出格式说明================================ -->  
    <!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->  
    <!-- #%r 输出自应用启动到输出该log信息耗费的毫秒数  -->  
    <!-- #%c 输出所属的类目，通常就是所在类的全名 -->  
    <!-- #%t 输出产生该日志事件的线程名 -->  
    <!-- #%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” -->  
    <!-- #%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  -->  
    <!-- #%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)  -->  
    <!-- ========================================================================== -->  
      
    <!-- ========================== 输出方式说明================================ -->  
    <!-- Log4j提供的appender有以下几种:  -->  
    <!-- org.apache.log4j.ConsoleAppender(控制台),  -->  
    <!-- org.apache.log4j.FileAppender(文件),  -->  
    <!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->  
    <!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件),  -->  
    <!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)   -->  
<!-- ========================================================================== -->  
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">      
    <!-- 输出日志到控制台  ConsoleAppender -->   
        <appender name="console"   
        class="org.apache.log4j.ConsoleAppender">  
        <param name="Threshold" value="debug"></param>  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n"></param>  
        </layout>  
    </appender>  
  
    <!-- 输出日志到文件  每天一个文件 -->  
    <appender name="dailyRollingFile"  
        class="org.apache.log4j.DailyRollingFileAppender">  
        <param name="Threshold" value="debug"></param>  
        <param name="ImmediateFlush" value="true"></param>  
        <param name="File" value="logs/log.log"></param>  
        <param name="DatePattern" value="'.'yyyy-MM-dd'.log'"></param>  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n"></param>  
        </layout>  
    </appender>   
      
    <!-- 输出日志到文件  文件大小到达指定尺寸的时候产生一个新的文件 -->  
    <appender name="railyFile"   
        class="org.apache.log4j.RollingFileAppender">  
        <param name="File" value="logs/error.log"></param>  
        <param name="ImmediateFlush" value="true"/>  
        <param name="Threshold" value="error"></param>  
        <param name="Append" value="true"></param>  
        <param name="MaxFileSize" value="10MB"></param>  
        <param name="MaxBackupIndex" value="50"></param>  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n"></param>  
        </layout>  
    </appender>  
  
    <!-- 输出日志到文件 -->  
    <!-- <appender name="file"  
        class="org.apache.log4j.FileAppender">  
        <param name="File" value="logs/file.log"></param>  
        <param name="Threshold" value="info"></param>  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n"></param>  
        </layout>  
    </appender>   -->
  
    <!--   
        定义全局的日志输出级别,但是在输出目的地的配置中配置的具体输出级别优先级高于全局定义的优先级。  
        如果在railyFile中定义<param name="Threshold" value="info"></param>，那么将会把info以上级别的信息输出  
     -->  
    <root>       
        <priority value="error" />       
        <appender-ref ref="console" />    
        <appender-ref ref="dailyRollingFile" />    
        <appender-ref ref="railyFile" />    
        <!-- <appender-ref ref="file" />   -->  
    </root>         
  
</log4j:configuration>   